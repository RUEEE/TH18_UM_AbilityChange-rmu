
void BossItem()
{
    var A, B, C;
    unless ([-9986] == 0) goto BossItem_240 @ 0;
    ins_506();
    ins_507(1, $B);
    ins_507(2, $C);
    ins_508(64.0f, 64.0f);
    ins_510($A);
    ins_509();
BossItem_240:
    return;
}

void BossItemPhase()
{
    var A, B, C, D;
    unless ([-9986] == 0) goto BossItemPhase_240 @ 0;
    ins_506();
    ins_510($C);
    ins_507(1, $A);
    ins_507(2, $B);
    ins_508(%D, %D);
    ins_509();
BossItemPhase_240:
    return;
}

void BossItemPhase2()
{
    var A, B, C, D;
    unless ([-9986] == 0) goto BossItemPhase2_244 @ 0;
    ins_506();
    ins_507(3, $A);
    ins_507(1, $B);
    ins_507(2, $C);
    ins_508(%D, %D);
    ins_509();
BossItemPhase2_244:
    return;
}

void BossItemPhase3()
{
    var A, B, C;
    unless ([-9986] == 0) goto BossItemPhase3_240 @ 0;
    ins_506();
    ins_510(6);
    ins_507(1, $A);
    ins_507(2, $B);
    ins_508(%C, %C);
    ins_509();
BossItemPhase3_240:
    return;
}

void DeadAttack1()
{
    [-9981.0f] = 3.0f;
    [-9985] = 2;
    [-9984] = 2;
    ins_424(0);
    ins_300("DeadAttackEt1", 0.0f, 0.0f, 10, 10, 0);
    return;
}

void DeadAttack2()
{
    [-9981.0f] = 3.0f;
    [-9985] = 2;
    [-9984] = 2;
    ins_424(0);
    ins_300("DeadAttackEt1", 0.0f, 0.0f, 10, 10, 0);
    return;
}

void DeadAttackEt1()
{
    var A;
    ins_502(32);
    ins_600(0);
    ins_607(0, 0);
    ins_602(0, 7, 2);
    ins_606(0, 1, 1);
    ins_604(0, 0.0f, 0.05235988f);
    ins_605(0, [-9981.0f], 1.0f);
    ins_609(0, 0, 0, 2, 1, -9999994, -9999994.0f, -9999994.0f);
    $A = [-9985];
    goto DeadAttackEt1_364 @ 0;
DeadAttackEt1_324:
    ins_601(0);
    ins_23([-9984]);
DeadAttackEt1_364:
    if ($A--) goto DeadAttackEt1_324 @ 0;
    ins_1();
}

void DebugSkipFunc()
{
    ins_901();
    return;
}

void DebugSkipStopFunc()
{
    ins_902();
    return;
}

void Ecl_EtBreak()
{
    var A;
    %A = 16.0f;
    ins_502(32);
    goto Ecl_EtBreak_216 @ 1;
Ecl_EtBreak_120:
    ins_615(%A);
    %A;
+1: //1
    10;
    ins_51();
    ins_45(%A);
Ecl_EtBreak_216:
    if (%A < 640.0f) goto Ecl_EtBreak_120 @ 0;
    ins_1();
}

void Ecl_EtBreak2()
{
    var A;
    %A = 16.0f;
    ins_502(32);
    goto Ecl_EtBreak2_216 @ 1;
Ecl_EtBreak2_120:
    ins_615(%A);
    %A;
+1: //1
    6;
    ins_51();
    ins_45(%A);
Ecl_EtBreak2_216:
    if (%A < 640.0f) goto Ecl_EtBreak2_120 @ 0;
    ins_1();
}

void Ecl_EtBreak2_ni()
{
    var A;
    %A = 16.0f;
    ins_502(32);
    goto Ecl_EtBreak2_ni_216 @ 1;
Ecl_EtBreak2_ni_120:
    ins_616(%A);
    %A;
+1: //1
    6;
    ins_51();
    ins_45(%A);
Ecl_EtBreak2_ni_216:
    if (%A < 640.0f) goto Ecl_EtBreak2_ni_120 @ 0;
    ins_1();
}

void Ecl_EtBreak_ni()
{
    var A;
    %A = 16.0f;
    ins_502(32);
    goto Ecl_EtBreak_ni_216 @ 1;
Ecl_EtBreak_ni_120:
    ins_616(%A);
    %A;
+1: //1
    10;
    ins_51();
    ins_45(%A);
Ecl_EtBreak_ni_216:
    if (%A < 640.0f) goto Ecl_EtBreak_ni_120 @ 0;
    ins_1();
}

void EffChargePoint()
{
    var A, B, C;
    ins_302(1);
    ins_303($B, 152 + $C);
    ins_319($B, %A);
    ins_516(54);
    return;
}

void EffChargePoint2()
{
    var A, B, C, D, E;
    ins_302(1);
    ins_303($C, 152 + $D);
    ins_319($C, %A);
    ins_303($C + 1, 152 + $E);
    ins_319($C + 1, %A + %B);
    ins_516(54);
    return;
}

void EffChargePoint3()
{
    var A, B, C, D, E, F;
    ins_302(1);
    ins_303($C, 152 + $D);
    ins_319($C, %A + %B);
    ins_303($C + 1, 152 + $E);
    ins_319($C + 1, %A);
    ins_303($C + 2, 152 + $F);
    ins_319($C + 2, %A - %B);
    ins_516(54);
    return;
}

void ItemCarryLily()
{
    var A, B;
    $A = 100;
    ins_302(2);
    ins_306(0, 229);
    ins_500(48.0f, 48.0f);
    ins_501(16.0f, 16.0f);

    ins_511(8000);
    ins_507(1,99);
    ins_508(200.0f,200.0f);
    ins_507(4,1);
    ins_507(7,1);

    ins_404(1.5707964f, 2.2f);
    ins_445(80, 0, 0.0f);
    ins_516(74);
    ins_23(80);
    //[-9985] is the summon count

    @LiliCard_at() async;
    @LiliCard_at2() async;
    @LiliCard_at3() async;
    @LiliCard_at4() async;
a:
    ins_23(1000);
    goto a @ 0; 
    ins_1();
}

void ItemCarryLily2()
{
    var A, B;
    $A = 100;
    ins_302(2);
    ins_306(0, 235);
    ins_500(48.0f, 48.0f);
    ins_501(16.0f, 16.0f);

    ins_511(8000);
    ins_507(1,99);
    ins_508(200.0f,200.0f);
    ins_507(4,1);
    ins_507(7,1);

    ins_404(1.5707964f, 2.2f);
    ins_445(80, 0, 0.0f);
    ins_516(74);
    ins_23(80);
    //[-9985] is the summon count
    @LiliCard_at() async;
    @LiliCard_at2() async;
    @LiliCard_at3() async;
    @LiliCard_at4() async;
a:
    ins_23(1000);
    goto a @ 0; 
    ins_1();
}


void LiliCard_at()
{
    ins_23(60);
    goto LiliCard_at_872 @ 0;
LiliCard_at_80:
    @LiliCard_at_f(8, 4, 3.883222f);
    ins_23(60);
    ins_401(120, 1, 32.0f, 96.0f);
    ins_23(120);
    @LiliCard_at_f(8, 4, -3.883222f);
    ins_23(60);
    ins_401(120, 1, 64.0f, 128.0f);
    ins_23(120);
    @LiliCard_at_f(8, 4, 3.883222f);
    ins_23(60);
    ins_401(120, 1, 0.0f, 144.0f);
    ins_23(120);
    @LiliCard_at_f(8, 4, -3.883222f);
    ins_23(60);
    ins_401(120, 1, -64.0f, 128.0f);
    ins_23(120);
    @LiliCard_at_f(8, 4, 3.883222f);
    ins_23(60);
    ins_401(120, 1, -32.0f, 96.0f);
    ins_23(120);
    @LiliCard_at_f(8, 4, -3.883222f);
    ins_23(60);
    ins_401(120, 1, 0.0f, 128.0f);
    ins_23(120);
LiliCard_at_872:
    if (1) goto LiliCard_at_80 @ 0;
    return;
}

void LiliCard_at2()
{
    var A, B, C, D, E;
    $A = 1;
    ins_600($A);
    ins_607($A, 3);
    ins_602($A, 7, 4);
    ins_606($A, 1, 1);
    ins_604($A, 1.5707964f, 0.0f);
    ins_605($A, 0.1f, 0.2f);
    ins_611($A, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    %B = [-9998.0f];
    %C = 0.0f;
    $D = -1;
    $E = 400000;
    goto LiliCard_at2_1256 @ 0;
LiliCard_at2_460:
    $D = $D + 1;
    ins_628($A, [-9987.0f] * _f(192), 0.0f);
    ins_604($A, 1.5707964f + ([-9987.0f] * 0.17453292f), 0.0f);
!E
    1.0f + ([-9999.0f] * 1.0f);
!N
    1.0f + ([-9999.0f] * 1.0f);
!H
    1.4f + ([-9999.0f] * 1.4f);
!LO
    1.5f + ([-9999.0f] * 1.5f);
!*
    ins_605($A, [-1.0f], 0.0f);
    ins_601($A);
!E
    16;
!N
    4;
!H
    3;
!LO
    3;
!*
    ins_23([-1]);
LiliCard_at2_1256:
    if ($E--) goto LiliCard_at2_460 @ 0;
    return;
}

void LiliCard_at3()
{
    var A, B, C, D, E;
    $A = 2;
    ins_600($A);
    ins_607($A, 5);
    ins_602($A, 19, 2);
    ins_606($A, 8, 1);
    ins_604($A, 1.5707964f, 0.0f);
    ins_605($A, 0.1f, 0.2f);
    ins_611($A, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    %B = [-9998.0f];
    %C = 0.0f;
    $D = -1;
    $E = 400000;
    goto LiliCard_at3_1112 @ 0;
LiliCard_at3_460:
    $D = $D + 1;
    ins_609($A, 1, 0, 8, 120, -999999, 0.0f, 0.0052359877f);
    ins_605($A, 1.2f + ([-9999.0f] * 0.5f), 0.0f);
    ins_601($A);
!E
    120;
!N
    40;
!H
    30;
!LO
    20;
!*
    ins_23([-1]);
    ins_609($A, 1, 0, 8, 120, -999999, 0.0f, -0.0052359877f);
    ins_605($A, 1.2f + ([-9999.0f] * 0.5f), 0.0f);
    ins_601($A);
!E
    120;
!N
    50;
!H
    30;
!LO
    20;
!*
    ins_23([-1]);
LiliCard_at3_1112:
    if ($E--) goto LiliCard_at3_460 @ 0;
    return;
}

void LiliCard_at4()
{
    var A, B, C, D, E;
    $A = 3;
    ins_600($A);
    ins_607($A, 5);
    ins_602($A, 33, 1);
    ins_606($A, 16, 1);
    ins_604($A, 1.5707964f, 0.0f);
    ins_605($A, 0.1f, 0.2f);
    ins_611($A, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611($A, 0, 2097152, 60, -999999, 3.0f, -999999.0f);
    %B = [-9998.0f];
    %C = 0.0f;
    $D = -1;
    $E = 400000;
    goto LiliCard_at4_620 @ 0;
LiliCard_at4_504:
    $D = $D + 1;
    ins_601($A);
    ins_23(90);
LiliCard_at4_620:
    if ($E--) goto LiliCard_at4_504 @ 0;
    return;
}

void LiliCard_at4b()
{
    var A, B, C, D, E;
    $A = 4;
    ins_600($A);
    ins_607($A, 5);
    ins_602($A, 4, 2);
!E
    48;
!N
    64;
!H
    64;
!LO
    64;
!*
    ins_606($A, [-1], 1);
    ins_604($A, 1.5707964f, 0.0f);
    ins_605($A, 0.1f, 0.2f);
    ins_611($A, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611($A, 0, 2097152, 60, -999999, 3.0f, -999999.0f);
    %B = [-9998.0f];
    %C = 0.0f;
    $D = -1;
    $E = 400000;
    goto LiliCard_at4b_780 @ 0;
LiliCard_at4b_584:
    $D = $D + 1;
    ins_601($A);
!E
    90;
!N
    90;
!H
    90;
!LO
    60;
!*
    ins_23([-1]);
LiliCard_at4b_780:
    if ($E--) goto LiliCard_at4b_584 @ 0;
    return;
}

void LiliCard_at_f(var A, var B, var C)
{
    var D, E, F, G, H;
    $D = 0;
    ins_600($D);
    ins_607($D, 3);
    ins_602($D, $A, $B);
!E
    7;
!N
    7;
!H
    7;
!LO
    7;
!*
    ins_606($D, [-1], 1);
    ins_604($D, 1.5707964f, 0.0f);
    ins_605($D, 0.1f, 0.2f);
    ins_611($D, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611($D, 0, -2147483648, 120, -999999, -999999.0f, -999999.0f);
    ins_611($D, 0, 2097152, 60, -999999, 3.0f, -999999.0f);
    %E = [-9998.0f];
    %F = 0.0f;
    $G = -1;
    ins_535($H, 40, 40, 50, 60);
    goto LiliCard_at_f_1084 @ 0;
LiliCard_at_f_624:
    $G = $G + 1;
    ins_609($D, 1, 0, -2147483648, 120 + ($G * 2), -999999, -999999.0f, -999999.0f);
    ins_604($D, %E, 0.0f);
    ins_627($D, %F);
    %E = %E + %C;
    %F = %F + 4.0f;
    ins_601($D);
    ins_23(1);
LiliCard_at_f_1084:
    if ($H--) goto LiliCard_at_f_624 @ 0;
    return;
}
void MainBossSpell()
{
    ins_524(43);
    ins_630(1);
+10: //10
    ins_518(-1);
+1: //11
    ins_301("Boss", 144.0f, -16.0f, 40, 1000, 1);
    ins_520();
    ins_524(81);
    ins_23(170);
    ins_518(-2);
    ins_519();
    return;
}

void MainBossSpell2()
{
    ins_524(43);
    ins_630(1);
+10: //10
    ins_518(-1);
+1: //11
    ins_301("BossSpell", 144.0f, -16.0f, 40, 1000, 1);
    ins_520();
    ins_524(81);
    ins_23(170);
    ins_518(-2);
    ins_519();
    return;
}

void MainMBossSpell()
{
    ins_524(22);
+10: //10
    ins_518(-3);
+1: //11
    ins_301("MBoss", 144.0f, -16.0f, 40, 1000, 1);
    ins_520();
    ins_524(81);
    ins_23(100);
    ins_518(-2);
    ins_519();
    return;
}

void NoEnemyDebug()
{
    goto NoEnemyDebug_80 @ 0;
NoEnemyDebug_60:
    ins_23(1000);
NoEnemyDebug_80:
    if (1) goto NoEnemyDebug_60 @ 0;
    return;
}

void et_ofs_r()
{
    var A, B, C, D;
    ins_81(%C, %D, [-9998.0f], %B * [-9999.0f]);
    ins_603($A, %C, %D);
    return;
}

void test()
{
    var A, B;
!HL
    ins_87(%A, [-9997.0f] + _f(16), [-9996.0f] - _f(40), -%B, 448.0f);
!NHL
    ins_404([-9989.0f], 0.0f);
    ins_405(60, 0, [-9989.0f] + ([-9987.0f] * 0.5235988f), 2.0f);
!E
    ins_404([-9981.0f] + ([-9987.0f] * 0.5235988f), 0.0f);
    ins_405(60, 0, -9999994.0f, 2.0f);
!*
    return;
}

void test2()
{
    var A, B;
    return;
}
void DanmakuBassDrum()
{
    var A;
    ins_502(31);
    if([-9982]%80==20)//[-9982] is the frame count
    {
        ins_600(0);
        ins_602(0,43,3);
        ins_604(0,[-9998.0f]*0.2f,0.0f);
        ins_605(0,2.0f,0.0f);
        ins_606(0,4,1);
        ins_607(0,2);
        ins_601(0);
    }
    ins_1();
}

void DanmakuSakuyaOp()
{
    var A;
    ins_502(31);
    if([-9982]%180==0)//[-9982] is the frame count
    {
        ins_600(0);
        ins_602(0,21,4);
        ins_605(0,3.0f,3.0f);
        ins_607(0,0);
        ins_606(0,1,1);
        ins_604(0,0.2f,0f);
        ins_601(0);
        ins_604(0,-0.2f,0f);
        ins_601(0);
    }
    ins_1();
}

void DanmakuReimuOp()
{
    var A;
    ins_502(31);
    ins_400([-9987.0f]*180.0f,0.0f);
    if([-9962.0f]==12450.0f)
        return;
    if([-9982]%300==55)//[-9982] is the frame count
    {
        ins_600(0);
        
        ins_605(0,2.5f,0.0f);
        ins_606(0,1,1);
        ins_607(0,3);
        ins_609(0,0,0,128,360,0,0.0f,0.0f);
        ins_609(0,1,0,64,1000,13,4.0f,0.0f);
        ins_602(0,47,[-10000]%4);
        ins_604(0,[-9999.0f]*0.5f+0.5f,0.0f);
        ins_601(0);
        ins_602(0,47,[-10000]%4);
        ins_604(0,[-9999.0f]*-0.5f+3.1415926f-0.5f,0.0f);
        ins_601(0);
    }
    ins_1();
}

void DanmakuMokou()
{
    //float x;
    var A, B,C,D;
    float scale;
    scale=64.0f;
    ins_502(2065);
    if([-9982]%900!=700 )
     return;
    //if([-10000]%3<=2)//[-9982] is the frame count
    //{
    //    x=_f([-9982]*15%360)-180.0f;
    //    ins_600(0);
    //    ins_602(0,[-10000]%2*3+25,0);
    //    ins_604(0,1.57079+[-9987.0f]*0.2f,0.5f);
    //    ins_605(0,2.0f,0.0f);
    //    ins_606(0,2,1);
    //    ins_607(0,1);
    //    ins_628(0,x+[-9987.0f]*40.0f,0.0f);
    //    ins_601(0);
    //}

   
    if([-9962.0f] !=12450.0f )
        return;
        

    [-9981.0f]=0.0f;
    ins_400([-9987.0f]*180.0f,0.0f);
    ins_302(2);
    ins_303(0, 261);

    ins_323(0, 313);
    ins_516(51);
    ins_329(0, scale / 128.0f, scale / 128.0f);
    @MokouNuclearMove() async;
    @MokouNuclearAtt() async;
    %C = _f(0);
    $D = 12;
    goto BossCard2Bomb_700 @ 0;
BossCard2Bomb_464:
    ins_500(%C / _f(3), %C);
    ins_501(%C, %C);
    [-9981.0f]=%C;
    %C = %C + (scale / 12.0f);
    ins_23(1);
BossCard2Bomb_700:
    if ($D--) goto BossCard2Bomb_464 @ 0;
    goto BossCard2Bomb_828 @ 0;
BossCard2Bomb_808:
    ins_23(100);
BossCard2Bomb_828:
    if (1) goto BossCard2Bomb_808 @ 0;
    ins_1();

    ins_1();
}


void MokouNuclearMove()
{
    var A;
    ins_404([-9989.0f], 0.0f);
    ins_405(60, 0, [-9989.0f]+[-9987.0f]*0.5f,6.0f);
    ins_23(60);
    $A = 2;
    goto BossCard2BombMove_404 @ 0;
BossCard2BombMove_176:
    //ins_405(15, 0, [-9989.0f],6.0f);
    ins_23(15);
BossCard2BombMove_404:
    if ($A--) goto BossCard2BombMove_176 @ 0;
    return;
}
void MokouNuclearAtt()
{
    var;
    ins_600(0);
    ins_23(5);
a:
    ins_605(0,0.0f,0.0f);
    ins_609(0,0,0,1048576,1,0,0.0f,0.0f);
    ins_609(0,1,0,262144,99999,0,[-9971.0f]+3.14159f+[-9987.0f]*0.3f,9.0f);
    ins_609(0,2,0,-2147483648,15,0,0f,0f);
    ins_609(0,3,0,4,60,0,-0.08f,-999999.0f);
    ins_606(0,2,1);
    ins_607(0,3);

    ins_627(0,[-9981.0f]);

    ins_602(0,[-10000]%2*3+25,0);
    ins_604(0,[-9998.0f],0.5f);
    ins_601(0);
    ins_627(0,[-9981.0f]);
    ins_602(0,[-10000]%2*3+25,0);
    ins_604(0,[-9998.0f],0.5f);
    ins_601(0);

    ins_23(1);
    goto a @ 0;
    return;
}

void DanmakuMarisaOp()
{
    var A;
    ins_502(31);
    ins_400([-9965.0f]+[-9987.0f]*60.0f,460.0f);
    if([-9982]%180==130)//[-9982] is the frame count
    {
        ins_600(0);
        ins_602(0,8,[-10000]%2*5+1);
        ins_604(0,-1.57079+[-9987.0f]*0.2f,0.0f);
        ins_605(0,0.0f,0.0f);
        ins_606(0,1,1);
        ins_607(0,0);
        ins_608(0, 18, -1);
        ins_700(0,800.0f,800.0f,800.0f,15.0f);
        ins_701(0,60,30,40,60,0);
        ins_703(0,0);
    }
    ins_1();
}
void DanmakuSanaeOp2()
{
    var A;
    ins_502(31);
    ins_400([-9987.0f]*180.0f,-15.0f);
    if([-9982]%180==170)//[-9982] is the frame count
    {
        ins_600(0);
        ins_602(0,20,1);
        ins_605(0,9.0f,0.0f);
        ins_606(0,1,1);
        ins_607(0,0);
        ins_608(0, 18, -1);
        ins_609(0,0,0,-2147483648,45,0,-0.5f,-999999.0f);
        ins_609(0,1,0,4,15,0,-0.4f,-999999.0f);
        ins_700(0,50.0f,500.0f,0.0f,50.0f);

        ins_604(0,1.57079f,0.0f);
        ins_603(0,[-9987.0f]*30.0f,0.0f);
        ins_702(0);
    }
    ins_1();
}

void DanmakuMainShotPu()
{
    var A;
    ins_502(31);
    ins_400([-9987.0f]*50.0f,40.0f);
    if([-9982]%540==200)//[-9982] is the frame count
    {
        [-9985]=24;
        %A=-0.785398f+[-9987.0f]*0.5f;
        if([-10000]%2==0)
        {
             @LongWenDan(10, 2,[-9989.0f]-0.3f, 0.6f);
        }else
        {
            @LongWenDan(6, 12,[-9989.0f]-0.3f, 0.6f);
        }
       
    }
    ins_1();
}


void LongWenDan(var A, var B, var C, var D)
{
    var E, F;
    ins_600(0);
    ins_607(0, 3);
    ins_602(0, 12, 10);
    ins_606(0, [-9985], 1);
    ins_604(0, -1.5707964f, 0.6981317f);
    ins_605(0, 1.03f, 1.0f);
    ins_611(0, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    %E = 0.02618f;
    $F= 1;
    goto BossCard3_at_1376 @ 0;
BossCard3_at_376:
    ins_602(0, 12, $A);
    ins_609(0, 1, 1, 524288, 1000, -999999, %C, 1.0f);
    ins_609(0, 2, 1, 8, 1000, -999999, 0.0f, %E);
    %E = %E * -1.0f;
    ins_604(0, [-9998.0f], 0.43633232f);
    ins_601(0);
    ins_23(8);
    %C = %C + %D;
    ins_602(0, 12, $B);
    ins_609(0, 1, 1, 524288, 1000, -999999, %C, 1.0f);
    ins_609(0, 2, 1, 8, 1000, -999999, 0.0f, %E);
    %E = %E * -1.0f;
    ins_604(0, [-9998.0f], 0.43633232f);
    ins_601(0);
    ins_23(32);
BossCard3_at_1376:
    if ($F--) goto BossCard3_at_376 @ 0;
    return;
}

void Narumi()
{
    var A, B,C,D;
    if([-9962.0f]!=12450.0f)
        return;
    float scale;
    scale=64.0f;
    ins_502(2065);
    if([-9982]%720 != 120 )//[-9982] is the frame count
    {
        ins_1();
    }
    ins_400([-9987.0f]*180.0f,0.0f);
    ins_302(2);
    ins_303(0, 261);

    ins_323(0, 313);
    ins_516(51);
    ins_329(0, scale / 128.0f, scale / 128.0f);
    @NarumiMove() async;
    @NarumiAt() async;
    %C = _f(0);
    $D = 20;
    goto BossCard2Bomb_700 @ 0;
BossCard2Bomb_464:
    ins_500(%C / _f(3), %C);
    ins_501(%C, %C);
    %C = %C + (scale / 12.0f);
    ins_23(1);
BossCard2Bomb_700:
    if ($D--) goto BossCard2Bomb_464 @ 0;
    goto BossCard2Bomb_828 @ 0;
BossCard2Bomb_808:
    ins_23(100);
BossCard2Bomb_828:
    if (1) goto BossCard2Bomb_808 @ 0;
    ins_1();
}


void NarumiMove()
{
    var A;
    ins_404([-9989.0f], 0.0f);
    ins_405(60, 0, [-9989.0f],1.0f);
    ins_23(60);
    $A = 20;
    goto BossCard2BombMove_404 @ 0;
BossCard2BombMove_176:
    ins_405(5, 0, [-9989.0f],1.0f);
    ins_23(5);
BossCard2BombMove_404:
    if ($A--) goto BossCard2BombMove_176 @ 0;
    return;
}


void NarumiAt()
{
    var A, B;
    ins_600(0);
    ins_607(0, 3);
    ins_602(0, 25, 0);
!E
    1;
!N
    1;
!H
    2;
!LO
    3;
!*
    ins_606(0, [-1], 1);
    ins_604(0, 1.5707964f, 0.0f);
!E
    3.0f;
!N
    3.0f;
!H
    3.5f;
!LO
    3.5f;
!*
    ins_605(0, [-1.0f], 1.0f);
    ins_611(0, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611(0, 0, 1048576, 1, -999999, -999999.0f, -999999.0f);
    ins_611(0, 0, 2097152, 120, -999999, 0.0f, -999999.0f);
    ins_611(0, 0, -2147483648, 20, -999999, -999999.0f, -999999.0f);
    ins_611(0, 0, 1024, 0, -999999, -999999.0f, -999999.0f);
    ins_600(1);
    ins_607(1, 3);
    ins_602(1, 26, 0);
!E
    10;
!N
    10;
!H
    16;
!LO
    16;
!*
    ins_606(1, [-1], 1);
    ins_604(1, 1.5707964f, 0.034906585f);
    ins_605(1, 2.0f, 1.0f);
    ins_611(1, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611(1, 0, 1048576, 1, -999999, -999999.0f, -999999.0f);
    ins_627(0, 64.0f);
    %A = 1.570796f;
    %B = 1.570796f;
    goto BossCard2_at_1500 @ 0;
BossCard2_at_1024:
    %A = %A + 0.174533f;
    ins_604(0, %A, 0.0f);
    ins_601(0);
    %B = %B - 0.174533f;
    ins_604(0, %B, 0.0f);
    ins_601(0);
!E
    10;
!N
    10;
!H
    8;
!LO
    10;
!*
    ins_23([-1]);
    unless ([-9926] == 1) goto BossCard2_at_1500 @ 0;
!NHL
    ins_604(1, [-9998.0f], 0.0f);
    ins_601(1);
BossCard2_at_1500:
!*
    if (1) goto BossCard2_at_1024 @ 0;
    return;
}

void DieBt()
{
    var A;
    [-9981.0f] = 3.0f;
    [-9985] = 2;
    [-9984] = 5;
    ins_424(0);
    ins_300("DeadAttackEt1", 0.0f, 0.0f, 10, 10, 0);
    return;
}

void Mukade()
{
    var A, B, C, D, E, F;
    ins_502(31);
    %A = 2.0f;
    $B = 0;
    if([-9982]%300!= 80 )
        return;
    if([-9962.0f]==12450.0f )
        return;
    ins_600($B);
    ins_602($B, 0, 4);
    ins_604($B, 1.5707964f, 1.5707964f);
    ins_605($B, 5.0f, 5.0f);
    ins_700($B, -1.0f, -1.0f, -1.0f, 64.0f);
    ins_701($B, 160, -1, -1, -1, 0);
    ins_608(0, 18, -1);
    ins_609($B, 0, 0, 256, 300, 0, -9999994.0f, -9999994.0f);
    ins_609($B, 1, 1, 8, 15, 15, 0.0f, 0.017453292f * %A);
    ins_609($B, 2, 1, 8, 30, 30, 0.0f, -0.017453292f * %A);
    ins_609($B, 3, 1, 8, 30, 60, 0.0f, 0.017453292f * %A);
    ins_609($B, 4, 1, 8, 30, 90, 0.0f, -0.017453292f * %A);
    ins_609($B, 5, 1, 8, 30, 120, 0.0f, 0.017453292f * %A);
    ins_609($B, 6, 1, 8, 30, 150, 0.0f, -0.017453292f * %A);
    ins_609($B, 7, 1, 8, 30, 180, 0.0f, 0.017453292f * %A);
    %A = 2.8f;
    $B = 1;
    ins_600($B);
    ins_602($B, 0, 10);
    ins_604($B, 1.5707964f, 1.5707964f);
    ins_605($B, 5.0f, 5.0f);
    ins_700($B, -1.0f, -1.0f, -1.0f, 64.0f);
    ins_701($B, 160, -1, -1, -1, 0);
    ins_608(0, 18, -1);
    ins_609($B, 0, 0, 256, 300, 0, -9999994.0f, -9999994.0f);
    ins_609($B, 1, 1, 8, 15, 15, 0.0f, -0.017453292f * %A);
    ins_609($B, 2, 1, 8, 30, 30, 0.0f, 0.017453292f * %A);
    ins_609($B, 3, 1, 8, 30, 60, 0.0f, -0.017453292f * %A);
    ins_609($B, 4, 1, 8, 30, 90, 0.0f, 0.017453292f * %A);
    ins_609($B, 5, 1, 8, 30, 120, 0.0f, -0.017453292f * %A);
    ins_609($B, 6, 1, 8, 30, 150, 0.0f, 0.017453292f * %A);
    ins_609($B, 7, 1, 8, 30, 180, 0.0f, -0.017453292f * %A);
    %A = 3.5f;
    $B = 2;
    ins_600($B);
    ins_602($B, 0, 13);
    ins_604($B, 1.5707964f, 1.5707964f);
    ins_605($B, 5.0f, 5.0f);
    ins_700($B, -1.0f, -1.0f, -1.0f, 64.0f);
    ins_701($B, 160, -1, -1, -1, 0);
    ins_608(0, 18, -1);
    ins_609($B, 0, 0, 256, 300, 0, -9999994.0f, -9999994.0f);
    ins_609($B, 1, 1, 8, 15, 15, 0.0f, 0.017453292f * %A);
    ins_609($B, 2, 1, 8, 30, 30, 0.0f, -0.017453292f * %A);
    ins_609($B, 3, 1, 8, 30, 60, 0.0f, 0.017453292f * %A);
    ins_609($B, 4, 1, 8, 30, 90, 0.0f, -0.017453292f * %A);
    ins_609($B, 5, 1, 8, 30, 120, 0.0f, 0.017453292f * %A);
    ins_609($B, 6, 1, 8, 30, 150, 0.0f, -0.017453292f * %A);
    ins_609($B, 7, 1, 8, 30, 180, 0.0f, 0.017453292f * %A);
    $E = -1;
    $F = 1;
    goto BossCard7_at_4368 @ 0;
BossCard7_at_3576:
    $E = [-10000]%3;
    ins_81(%C, %D, ([-9989.0f] + 3.1415927f) + ([-9987.0f] * 0.17453292f), 320.0f);
    %C = %C + [-9997.0f];
    %D = %D + [-9996.0f];
    ins_604($E % 3, [-9989.0f] + ([-9987.0f] * 0.17453292f), 0.0f);
    ins_628($E % 3, %C, %D);
    ins_711($E % 3);
    ins_23(60);
BossCard7_at_4368:
    if ($F--) goto BossCard7_at_3576 @ 0;
    return;
}

void MotherKillingHorse()
{
    var A, B,C,D,E, F, G, H, I, J, K;
    ins_502(32);
    if([-9962.0f]!=12450.0f)
        return;
    if([-9982]%720 != 60 )//[-9982] is the frame count
    {
        ins_1();
    }
    ins_404(1.57079f,0.5f);
    ins_445(60,9,3.0f);
    ins_502(0);
    ins_503(32);
    ins_400([-9987.0f]*180.0f,0.0f);
    ins_302(2);
    ins_303(0, 264);

    ins_516(52);
    var N;
    $N=2;
a:
    $A=1;
    $B=6;
    %C=-1.57079f;
    %D=0.0f;
    ins_600($A);
    ins_607($A, 1);
    ins_602($A, 31, $B);
    ins_606($A, 2, 1);
    ins_604($A, 0.0f, 0.17453292f);
    ins_605($A, 2.0f, 1.0f);
    ins_611($A, 0, 2, 1, -999999, -999999.0f, -999999.0f);
    ins_611($A, 0, 4, 300, -999999, 0.01f, 1.5707964f);
    %E = 3.883222f;
    %F = %C;
    %G = 1.0f;
    %H = _f(0);
    ins_606($A, 4, 1);
    $J = 5;
    goto BossCard4_at_720 @ 0;
BossCard4_at_532:
    ins_604($A, %F + ([-9987.0f] * 0.0f), 0.87266463f);
    ins_605($A, %G, 0.0f);
    ins_601($A);
    ins_23(2);
BossCard4_at_720:
    if ($J--) goto BossCard4_at_532 @ 0;
    ins_606($A, 4, 1);
    $K = 5;
    goto BossCard4_at_1044 @ 0;
BossCard4_at_856:
    ins_602($A, 31, 1);
    ins_604($A, %F + ([-9987.0f] * 0.0f), 0.87266463f);
    ins_605($A, %G, 0.0f);
    ins_601($A);
    ins_23(3);
BossCard4_at_1044:
    if ($K--) goto BossCard4_at_856 @ 0;
    ins_23(15);
    if($N--)goto a @ 0;
    ins_23(10000);
    ins_1();
}